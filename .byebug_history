continue
params[:categories]
params[:class_details]
params
continue
params[:categories]
params.categories
params
params.categories
params
fitness_class_params
fc
fc.categories
params
fc.fitness_class_details
fc.fitness_class_categories
continue
a.name
a = FitnessClassSerializer.new(@fitness_class)
FitnessClassSerializer.new(@fitness_class)
continue
FitnessClassSerializer.new(@fitness_class)
exit
continue
a
a.@object
a.fitness_classes
a.fitness_class
a.name
a.studio_id
a
a.studio_id
a.studio
a.studios
a = AdminSerializer.new(@fitness_class)
AdminSerializer.new(@fitness_class)
@fitness_class.valid?
@fitness_class
continue
@fitness_class
continue
@fitness_class
exit
continue
@fitness_class.errors
@fitness_class_params
fitness_class_params
continue
fitness_class_params
@fitness_class_params
@fitness_class.params
params
@fitness_class.errors
continue
params
@fitness_class.errors
continue
@fitness_class.errors
continue
@fitness_class.errors
continue
Admin.first
Admin.all
@fitness_class.errors
@fitness_class
exit
payload
continue
payload
continue
encode_token(admin_id: @admin_id)
encode_token({admin_id: @admin_id})
@admin.authenticate(admin_login_params[:password])
token
@admin
exit
continue
auth_header
exit
continue
auth_header
token
decoded_token
current_admin
exit
continue
JWT.decode(token, "my_s3cr3t", true, algorithm: "HS256")
token
token = auth_header.split(" ")[1]
auth_header.split(" ")[1]
auth_header
params
decoded_token
current_admin
continue
step
admin_login_params[:email]
exit
admin_login_params
params
params[:auth][:email]
Admin.find_by(email: params[:auth][:email])
Admin.find_by(email: params[:email])
Admin.find_by(email: admin_login_params[:email])
admin_login_params
exit
params
admin_login_params
admin_login_params[:email]
exit
continue
current_admin
params
exit
params
continue
params
admin_params
continue
exit
continue
auth_header
decoded_token
params
continue
params
exit
@fitness_class.errors
@fitness_class = FitnessClass.create(fitness_class_params)
fitness_class_params
params
continue
admin2.errors
admin2 = Admin.create(admin_params)
continue
admin_params
continue
admin_params
params
admin_params
admin.params
admin1.errors
admin1 = Admin.create(admin_params)
Admin.create(admin_params)
continue
exit
FitnessClassDetail.all
exit
exitt
FitnessClass.find(26)
a.errors
a = FitnessClassDetail.create(fitness_class_id: fc1.id, class_detail_id: cd1.id)
FitnessClassDetail.all
exit
self.object.fitness_class_details.id
self.object.fitness_class_details
self.object.id
self.id
fc1
self.fitness_class_details
self.object.fitness_class_details
continue
category.category.name
category.category
category
exit
category.category.name
category.category
category
